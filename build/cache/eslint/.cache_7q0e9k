[{"/Users/prasad/Projects/cg_blog/pages/[uid].jsx":"1","/Users/prasad/Projects/cg_blog/pages/_app.js":"2","/Users/prasad/Projects/cg_blog/pages/_document.js":"3","/Users/prasad/Projects/cg_blog/pages/api/hello.js":"4","/Users/prasad/Projects/cg_blog/pages/index.js":"5","/Users/prasad/Projects/cg_blog/pages/slice-simulator.jsx":"6","/Users/prasad/Projects/cg_blog/components/Blogs.js":"7","/Users/prasad/Projects/cg_blog/components/BlogsSection.jsx":"8","/Users/prasad/Projects/cg_blog/components/FooterSection.jsx":"9","/Users/prasad/Projects/cg_blog/components/Header.js":"10","/Users/prasad/Projects/cg_blog/components/common/index.jsx":"11","/Users/prasad/Projects/cg_blog/components/index.jsx":"12"},{"size":943,"mtime":1679127130386,"results":"13","hashOfConfig":"14"},{"size":700,"mtime":1678870069696,"results":"15","hashOfConfig":"14"},{"size":233,"mtime":1678987082668,"results":"16","hashOfConfig":"14"},{"size":170,"mtime":1678272385942,"results":"17","hashOfConfig":"14"},{"size":5324,"mtime":1679286668726,"results":"18","hashOfConfig":"14"},{"size":664,"mtime":1679245827684,"results":"19","hashOfConfig":"14"},{"size":463,"mtime":1678812090577,"results":"20","hashOfConfig":"14"},{"size":1553,"mtime":1678812410577,"results":"21","hashOfConfig":"14"},{"size":3183,"mtime":1679124931125,"results":"22","hashOfConfig":"14"},{"size":720,"mtime":1678862369470,"results":"23","hashOfConfig":"14"},{"size":2149,"mtime":1678287082977,"results":"24","hashOfConfig":"14"},{"size":2053,"mtime":1678812453656,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cgh3lg",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/prasad/Projects/cg_blog/pages/[uid].jsx",[],[],"/Users/prasad/Projects/cg_blog/pages/_app.js",[],[],"/Users/prasad/Projects/cg_blog/pages/_document.js",[],[],"/Users/prasad/Projects/cg_blog/pages/api/hello.js",[],[],"/Users/prasad/Projects/cg_blog/pages/index.js",["66","67","68"],[],"import { SliceZone } from \"@prismicio/react\";\nimport { createClient } from \"../prismicio\";\nimport { BlogLists, components } from \"../slices\";\nimport Header from \"./../components/Header\";\nimport { Column, Row } from \"../components/common\";\nimport { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\n// import BlogsSection from \"../components/BlogsSection\";\n\nconst Home = ({ page, navigation, settings }) => {\n  const [homepageData, setHomepageData] = useState();\n  const [blogListData, setBlogListData] = useState([]);\n  const bloglistArray = [];\n  const [allData, setAllData] = useState();\n\n  const [blogFilter, setBlogFilter] = useState(\"Education\");\n  // const navigate = useNavigate();\n\n  useEffect(() => {\n    console.log(page);\n    setBlogListData(page);\n  }, [page]);\n\n  const handleFilter = (value) => {\n    debugger;\n    console.log(page);\n    let allBlogPostData = page;\n    let matchedTags = allBlogPostData.map((item, i) => {\n      debugger;\n      // console.log(item.tags);\n      return item.tags.filter((tag) => {\n        if (tag === value) {\n          bloglistArray.push(item);\n          // console.log(item, \"matched data\");\n        }\n      });\n    });\n\n    setBlogListData(bloglistArray);\n    console.log(bloglistArray, \"blog list array\");\n    setBlogFilter(value);\n  };\n\n  const handleSelectedStory = (story) => {\n    const shorts = story.short_stories;\n    // navigate(\"/shorts\", { state: { shorts: shorts, blogFilter: blogFilter } });\n  };\n\n  return (\n    <Column\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        backgroundColor: \"#5F1296\",\n        paddingBottom: \"100%\",\n      }}\n    >\n      {page.map((data, index) => {\n        if (data.uid === \"home\") {\n          return <Header key={index} data={data} />;\n        }\n      })}\n\n      <Row style={{ margin: \"30px 0 30px\" }}>\n        <span\n          className={\"unselected_blog_stories\"}\n          onClick={() => handleFilter(\"all\")}\n        >\n          {\"All\"}\n        </span>\n        <span\n          className={\"unselected_blog_stories\"}\n          onClick={() => handleFilter(\"recent\")}\n        >\n          {\"Recent\"}\n        </span>\n        <span\n          className={\"unselected_blog_stories\"}\n          onClick={() => handleFilter(\"education\")}\n        >\n          {\"Education\"}\n        </span>\n        <span\n          className={\"unselected_blog_stories\"}\n          onClick={() => handleFilter(\"health\")}\n        >\n          {\"Health\"}\n        </span>\n      </Row>\n\n      {blogListData.map((data, i) => {\n        if (data?.uid !== \"home\") {\n          return data?.data?.slices?.map((item, i) => (\n            <Column key={i} style={{ padding: \"0 1rem\" }}>\n              {item?.slice_type !== \"footer\" ? (\n                <Link key={i} href={`/${data.uid}`}>\n                  <Column\n                    key={i}\n                    style={{\n                      marginBottom: \"1rem\",\n                      justifyContent: \"flex-start\",\n                    }}\n                    // onClick={() => handleSelectedStory(story)}\n                    className=\"blog_section\"\n                  >\n                    <img\n                      src={item?.primary?.thumbnail_image?.url}\n                      alt={item?.primary?.thumbnail_image?.alt}\n                      className=\"story_img\"\n                    />\n                    <Row\n                      style={{\n                        alignItems: \"center\",\n                        width: \"100%\",\n                        justifyContent: \"flex-end\",\n                        margin: \"0.5rem 0\",\n                      }}\n                    >\n                      <Row\n                        style={{\n                          alignItems: \"center\",\n                          marginRight: \"1.5rem\",\n                        }}\n                      >\n                        <img\n                          src={item?.primary?.clock_icon?.url}\n                          alt={item?.primary?.clock_icon?.alt}\n                          className=\"clock_icon\"\n                        />\n                        <span className=\"time_shorts\">{5} mins</span>\n                      </Row>\n                      <Row style={{ alignItems: \"center\" }}>\n                        <img\n                          src={item?.primary?.short_icon?.url}\n                          alt={item?.primary?.short_icon?.alt}\n                          className=\"shorts_icon\"\n                        />\n                        <span className=\"time_shorts\">{4} shorts</span>\n                      </Row>\n                    </Row>\n                    <Column>\n                      <span className=\"story_title\">\n                        {item?.primary?.title[0]?.text}\n                      </span>\n                      <p className=\"story_subtitle\">\n                        {item?.primary?.description[0]?.text}\n                      </p>\n                    </Column>\n                  </Column>\n                </Link>\n              ) : (\n                \"\"\n              )}\n            </Column>\n          ));\n        }\n      })}\n    </Column>\n  );\n};\n\nexport default Home;\n\nexport async function getStaticProps({ previewData }) {\n  const client = createClient({ previewData });\n  const page = await client.getAllByTag(\"all\");\n  return {\n    props: {\n      page,\n    },\n  };\n}\n","/Users/prasad/Projects/cg_blog/pages/slice-simulator.jsx",[],[],"/Users/prasad/Projects/cg_blog/components/Blogs.js",[],[],"/Users/prasad/Projects/cg_blog/components/BlogsSection.jsx",["69","70","71"],[],"import { Column, Row } from \"./common\";\r\nimport BlogLibraryImages from \"./\";\r\n\r\nconst BlogsSection = ({ blogFilter, handleSelectedStory }) => {\r\n  return (\r\n    <>\r\n      {blogFilter.blog_stories.map((story, i) => (\r\n        <Row\r\n          key={story.title}\r\n          style={{ marginBottom: \"1rem\", justifyContent: \"flex-start\" }}\r\n          onClick={() => handleSelectedStory(story)}\r\n        >\r\n          <img src={story.image} className=\"story_img\" alt=\"\" />\r\n          <Column>\r\n            <span className=\"story_title\">{story.title}</span>\r\n            <Row\r\n              style={{\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <Row\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  marginRight: \"1.5rem\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={BlogLibraryImages.ClockIcon}\r\n                  className=\"clock_icon\"\r\n                  alt=\"\"\r\n                />\r\n                <span>{story.time} mins</span>\r\n              </Row>\r\n              <Row style={{ alignItems: \"center\" }}>\r\n                <img\r\n                  src={BlogLibraryImages.ShortsIcon}\r\n                  className=\"shorts_icon\"\r\n                  alt=\"\"\r\n                />\r\n                <span>{story.shorts} shorts</span>\r\n              </Row>\r\n            </Row>\r\n          </Column>\r\n        </Row>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogsSection;\r\n","/Users/prasad/Projects/cg_blog/components/FooterSection.jsx",["72","73","74","75","76","77"],[],"import { Column, Row } from \"./common\";\r\nimport styled from \"styled-components\";\r\nimport { WhatsappShareButton } from \"react-share\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Footer = styled(Column)`\r\n  width: 100%;\r\n  height: 80px;\r\n  position: fixed;\r\n  bottom: 0;\r\n  align-items: center;\r\n  background: linear-gradient(\r\n    360deg,\r\n    #ffffff 51.78%,\r\n    rgba(255, 255, 255, 0) 106.9%\r\n  );\r\n  padding-top: 1rem;\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst FooterSection = ({ slice }, handleModal) => {\r\n  console.log({ slice }, handleModal);\r\n  const [likes, setLikes] = useState(50),\r\n    [liked, setLiked] = useState(false),\r\n    [originName, setOriginName] = useState(\"\"),\r\n    [likedImage, setLikedImage] = useState({\r\n      image: slice?.primary?.hearth_animation?.url,\r\n      className: \"heart_animation\",\r\n    });\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== undefined) {\r\n      setOriginName(window.location.origin);\r\n    }\r\n  });\r\n\r\n  const handleLike = () => {\r\n    if (liked) {\r\n      setLikedImage({\r\n        image: slice?.primary?.hearth_animation?.url,\r\n        className: \"heart_animation\",\r\n      });\r\n      setLiked(false);\r\n      setLikes(likes - 1);\r\n    } else {\r\n      const image = new Image();\r\n      image.src = slice?.primary?.hearth_animation?.url;\r\n      image.onload = () => {\r\n        setLiked(true);\r\n        setLikes(likes + 1);\r\n      };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (liked) {\r\n      setTimeout(() => {\r\n        setLikedImage({\r\n          image: slice?.primary?.red_heart_icon?.url,\r\n          className: \"heart_liked\",\r\n        });\r\n      }, 1000);\r\n    }\r\n  }, [liked]);\r\n\r\n  // const handleModalClose = (value) => {\r\n  //   setCommentIconClicked(value);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"footer_section\">\r\n        <Row className=\"footer_like_section\" onClick={handleLike}>\r\n          {liked ? (\r\n            <img\r\n              src={likedImage.image}\r\n              className={likedImage.className}\r\n              alt=\"\"\r\n            />\r\n          ) : (\r\n            <img\r\n              src={slice?.primary?.like_icon?.url}\r\n              className=\"heart_icon\"\r\n              alt=\"\"\r\n            />\r\n          )}\r\n          <span className=\"likes_no\">{likes}</span>{\" \"}\r\n          <span className=\"likes\">likes</span>\r\n        </Row>\r\n        <Row\r\n          className=\"footer_like_comment_section\"\r\n          onClick={() => handleModal(true)}\r\n        >\r\n          <img\r\n            src={slice?.primary?.comment_icon?.url}\r\n            className=\"comments_icon\"\r\n            alt=\"\"\r\n          />\r\n          <span>178 comments</span>\r\n        </Row>\r\n        <WhatsappShareButton\r\n          url={originName}\r\n          title=\"Hello Friend, Check out this interesting blog I found on the Toondemy community!\"\r\n        >\r\n          <Row>\r\n            <img\r\n              src={slice?.primary?.share_icon?.url}\r\n              className=\"share_icon\"\r\n              alt=\"\"\r\n            />\r\n            <span>12 share</span>\r\n          </Row>\r\n        </WhatsappShareButton>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FooterSection;\r\n","/Users/prasad/Projects/cg_blog/components/Header.js",["78","79"],[],"import { Column } from \"./common\";\r\n\r\nconst Header = (data) => {\r\n  return (\r\n    <>\r\n      <Column style={{ width: \"100%\", position: \"relative\" }}>\r\n        <img\r\n          src={data?.data?.data?.slices[0]?.primary?.headerimage?.url}\r\n          style={{ width: \"100%\", aspectRatio: \"4.44\" }}\r\n          alt=\"\"\r\n        />\r\n\r\n        <img\r\n          src={data?.data?.data?.slices[0]?.primary?.cancleicon?.url}\r\n          className=\"back_btn\"\r\n          alt=\"\"\r\n        />\r\n        <Column className=\"safe_kids\"> kids safe</Column>\r\n      </Column>\r\n      <span className=\"header_title\">\r\n        <p>{data?.data?.data?.slices[0]?.primary?.title[0]?.text} </p>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/Users/prasad/Projects/cg_blog/components/common/index.jsx",[],[],"/Users/prasad/Projects/cg_blog/components/index.jsx",[],[],{"ruleId":"80","severity":1,"message":"81","line":106,"column":21,"nodeType":"82","endLine":110,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":125,"column":25,"nodeType":"82","endLine":129,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":133,"column":25,"nodeType":"82","endLine":137,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":13,"column":11,"nodeType":"82","endLine":13,"endColumn":65},{"ruleId":"80","severity":1,"message":"81","line":29,"column":17,"nodeType":"82","endLine":33,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":37,"column":17,"nodeType":"82","endLine":41,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":34,"column":3,"nodeType":"85","endLine":34,"endColumn":12,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":67,"column":6,"nodeType":"88","endLine":67,"endColumn":13,"suggestions":"89"},{"ruleId":"80","severity":1,"message":"81","line":78,"column":13,"nodeType":"82","endLine":82,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":84,"column":13,"nodeType":"82","endLine":88,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":97,"column":11,"nodeType":"82","endLine":101,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":109,"column":13,"nodeType":"82","endLine":113,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":7,"column":9,"nodeType":"82","endLine":11,"endColumn":11},{"ruleId":"80","severity":1,"message":"81","line":13,"column":9,"nodeType":"82","endLine":17,"endColumn":11},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Use `<Image />` from `next/image` instead to utilize Image Optimization. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setOriginName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["90"],"React Hook useEffect has a missing dependency: 'slice?.primary?.red_heart_icon?.url'. Either include it or remove the dependency array. If 'setLikedImage' needs the current value of 'slice.primary.red_heart_icon.url', you can also switch to useReducer instead of useState and read 'slice.primary.red_heart_icon.url' in the reducer.","ArrayExpression",["91"],{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Add dependencies array: []",{"range":"96","text":"97"},"Update the dependencies array to be: [liked, slice?.primary?.red_heart_icon?.url]",{"range":"98","text":"99"},[1012,1012],", []",[1686,1693],"[liked, slice?.primary?.red_heart_icon?.url]"]